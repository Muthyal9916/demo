Spring Cloud:--
--------------
          Spring Cloud provides tools for developers to quickly build some of the common patterns in distributed systems.
          e.g.(Configuration management,service discovery,circuit breakers,intelligent routing,micro-proxy,control bus,
          one-time tokens,global locks,leadership election,distributed sessions,cluster state.)
                    Using spring cloud developers can quickly stand up services and applications that implement those patterns,
           They will work well in any distributed environment.
                
Distributed Environments:--
----------------------------
          A Distributed system is a network that consists of autonomous computers that are connected using a distribution middleware.
 they help in sharing different resources and capabilities to provide users with a single and integrated  coherent network.        

Advantages and Disadvantages in Distributed Systems:--
-----------------------------------------

Advantages:-
----------
1. Shareability
2. Expandability
3. Local Autonomy
4. Improved performance
5. Improved reliability and availability
6. Potential cost reduces

Dis-Advantages:--
--------------
1. Network reliance
2. Complexities
3. Security
4. Multiple point of failure

Spring Cloud Features:--
------------------
1. Distributed/Versioned configuration
2. Service registration and discovery
3. Routing
4. Service to service calls
5. Load Balancing
6. Circuit breakers
7. Global locks
8. Distributed messaging

Netflix Oss:--
-------------
    Netflix Oss stands for Netflix Open Source Software developed by Netflix Team.
 Circuit Breaker:-
 -------------
 Circuit Breaker is a Desing pattern,it is used to detect the failures and encapsulates the logic of preventing a failure
 from constantaly recurring,during maintenance.

Zuul:-- 
Add Zuul and eureka discovery
server:
  port: 6066


spring: 
    application: 
     name: zuuldemo  

zuul: 
 routes: 
  std: 
    url: http://localhost:6067
  links: 
   path: /dynamicips/**
   url: http://localhost:8088/
   strip-prefix:  false
  get: 
   path: /hi/**
   url: http://localhost:8088/
   strip-prefix:  false
  link1: 
   path: /fetchingdevices/**
   url: http://localhost:8088/
   strip-prefix:  false
  lect: 
   url: http://localhost:6068
   strip-prefix:  false
 host:  
   socket-timeout-millis: 600000
  

   
  
eureka: 
  instance: 
    preferIpAddress:  true
  client: 
      registerWithEureka: true
      fetchRegistry:  true
      service-url:
              defaultzone:  http://localhost:8761/eureka/  

   


    
      
