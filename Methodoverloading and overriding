MethodOverloading:--
------------------
Step1: Automatic promotion in overloading
        While resolving overloaded methods if exact matched method is not available , then we wont get any compile time error
        immediately , first it will promote argument to the next level and check whether matched method is available or not,if 
        matched method is available then it will be considered,and if the matched method is not available then compiler promotes 
        arguments once again to the next level, this process will be continued untill all possible promotions,still if the matched
        method is not available then we will get compile time error. the following are all possible promotions in overloading.
        
        byte-short-int-long-float-double
        char-int


In Methodoverriding method names and argument types must be matched i.e method signatures must be same.

co-varient return type:
-------------------------
In overriding return types must be same, but this rule is applicable until 1.4 versionn only from 1.5 version onwards we can take 
co-varient return types -- Child class method return type need to be same as Parent class method return type,its child type also allowed,
                             It's applicable only for object types not for primitive type.

class Parent
{
  public Object m1()
  {
  return null;
  }
}
Class C extend Parent
{
public String m1()
{
  return null;
 }
} 

parent class method retrun type:-- object,Number,String,double
------------------------



child class method return type:--String/object,Number/integer,Object is not applicable because parent to parent is not possible,double only
-----------------------

Parent class private methods are not applicable for child class and hence overriding concept not applicable for private methods.

we can't override parent class final methods in child classes, if we are trying to override we will get compiletime error
